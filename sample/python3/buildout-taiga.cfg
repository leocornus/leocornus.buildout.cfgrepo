[buildout]
extends = 
    cfgrepo/config/base.cfg
    cfgrepo/config/circus/circus-build.cfg
    cfgrepo/config/circus/circus-conf.cfg
    cfgrepo/config/db/postgresql-build.cfg
    cfgrepo/config/db/postgresql-conf.cfg
# supervisord does not work on any version of Python 3.
#    cfgrepo/config/supervisor.cfg

eggs +=
    Django==1.7.8
    django-picklefield==0.3.1
    django-sampledatahelper==0.2.2
    gunicorn==19.3.0
    psycopg2
    pillow==2.5.3
    pytz==2014.4
    six==1.8.0
    amqp==1.4.6
    djmail==0.10
    django-pgjson==0.2.2
    djorm-pgarray==1.0.4
    django-jinja==1.0.4
    jinja2==2.7.2
    pygments==1.6
    django-sites==0.8
    Markdown==2.4.1
    fn==0.2.13
    diff-match-patch==20121119
    requests==2.4.1
    django-sr==0.0.4
    easy-thumbnails==2.1
    celery==3.1.17
    redis==2.10.3
    Unidecode==0.04.16
    raven==5.1.1
    bleach==1.4
    django-ipware==0.1.0
    premailer==2.8.1
    django-transactional-cleanup==0.1.14
    lxml==3.4.1
# eggs from source code.
    django-pglocks
#    taiga-contrib-github-auth

# need clone the latest source code from github
develop =
    src/django-pglocks
#    src/taiga-contrib-github-auth/back

parts =
    circus-build
    basic-circus-conf
    postgresql-build
    psycopg2
    postgresql-conf
    psql-bin
    pgctl-bin
    taiga-back
#    taiga-back-django
#    supervisor-bin

# using the djangorecipe to generate the Django manage script.
[taiga-back-django]
recipe = djangorecipe
settings = settings.development
eggs =
    ${buildout:eggs}
project = taiga-back

# using zc.recipe.egg to generate the Django manage script.
[taiga-back]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
entry-points = taiga-back=django.core.management:execute_from_command_line
# using initialization to set the settings path.
initialization =
    import os
    os.environ["DJANGO_SETTINGS_MODULE"]="settings"
extra-paths = 
    ${buildout:directory}/taiga-back
# environment only works for custom recipe.
#environment = first-manage-env

#
# set the data directory for postgresql database.
[init-postgresql]
datadir = ${buildout:directory}/var/postgresql/taiga
[postgresql-conf]
datadir = ${buildout:directory}/var/postgresql/taiga

#
# extends the base-command from config/base.cfg
# to create database for taiga.
# 1. create role name taiga
# 2. create database named taiga, set owner to taiga
[create-taiga-db]
<= base-command
db-server = -h ${hosts:postgresql-ip} -p ${ports:postgresql}
cmds =
    ${postgresql-build:location}/bin/createuser taiga
    ${postgresql-build:location}/bin/createdb taiga -O taiga

[populate-sample-data]
<= base-command
cmds =
    cd ${buildout:directory}/taiga-back
    ${buildout:directory}/bin/taiga-back migrate --noinput
    ${buildout:directory}/bin/taiga-back loaddata initial_user
    ${buildout:directory}/bin/taiga-back loaddata initial_project_templates
    ${buildout:directory}/bin/taiga-back sample_data

[hosts]
circus-web = 10.160.192.44

[ports]
circus-web = 8080

# test to gnerate the circus script.
#
# circus is using ZeroMQ
# ZeroMQ is using autoconf >= 2.61
[circus]
recipe = zc.recipe.egg:script
eggs =
    circus
    chaussette
    circus-web
