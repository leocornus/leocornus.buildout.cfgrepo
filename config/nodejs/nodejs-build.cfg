###################################################################
# buildout config file to compile and build node.js and 
# its services / components.
###################################################################

[src-versions]
# 5.1.0, November 17, 2015
# 4.2.2, November 03, 2015
# 3.3.1, September 15, 2015
# 2.5.0, July 28, 2015
# 1.0.4 is released on January 24, 2015
# 0.10.40 is released on July 09, 2015
#nodejs = 0.10.40
# 0.12.7 is released on July 09, 2015
nodejs = 0.12.7

[downloads]
nodejs = http://nodejs.org/dist/v${src-versions:nodejs}/node-v${src-versions:nodejs}.tar.gz
# the anonymous git repo to mediawiki parsoid service.
parsoid-git = https://gerrit.wikimedia.org/r/p/mediawiki/services/parsoid

########
# dependence for node.js

[nodejs-build]
recipe = hexagonit.recipe.cmmi 
url = ${downloads:nodejs}
keep-compile-dir = true

[node-bin]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/node
inline =
    #! /usr/bin/env bash
    ${nodejs-build:location}/bin/node $@
mode = 755

[npm-bin]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/npm
inline =
    #! /usr/bin/env bash
    ${nodejs-build:location}/bin/npm $@
mode = 755

#########
# install the package manager bower
[bower-install]
<= base-command
cmds =
   cd ${buildout:parts-directory}
   ${npm-bin:output} install -g bower

[bower-bin]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/bower
inline =
    #! /usr/bin/env bash
    ${node-bin:output} ${nodejs-build:location}/bin/bower $@
mode = 755

#########
# install the end-to-end testing tool protractor. 
[protractor-install]
<= base-command
cmds =
   cd ${buildout:parts-directory}
   ${npm-bin:output} install -g protractor

[protractor-bin]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/protractor
inline =
    #! /usr/bin/env bash
    ${node-bin:output} ${nodejs-build:location}/bin/protractor $@
mode = 755

[webdriver-manager-bin]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/webdriver-manager
inline =
    #! /usr/bin/env bash
    ${node-bin:output} ${nodejs-build:location}/bin/webdriver-manager $@
mode = 755

##################################################################
# install parsoid in buildout parts folder.
# 
# We will usin npm install git repo to install Parsoid service.
# Parsoid will be installled in folder, as the npm package name is
# parsoid:
#
# * parts/node_modules/parsoid
# 
# We will NOT be about to change the folder structure 
# node_modules/parsoid
# as the result of npm pagckage name is parsoid.
# This will prevent use to install multiple Parsoid instance.
# 
# However, we could create different folders in parts folder,
# For example:
#
# * parts/parsoid-dev/node_modules/parsoid
# * parts/parsoid-uat/node_modules/parsoid
#
# Here are the buildout parts:
#
# [parsoid-install-dev]
# <= parsoid-install
# parsoid-install-folder = ${buildout:parts-directory}/parsoid-dev
#
# [parsoid-install-uat]
# <= parsoid-install
# parsoid-install-folder = ${buildout:parts-directory}/parsoid-uat
#
[parsoid-install]
<= base-command
# default install folder is parts directory.
parsoid-install-folder = ${buildout:parts-directory}
# install the dependences for parsoid, parsoid is the package name
parsoid-package-folder = node_modules/parsoid
cmds = 
    cd ${:parsoid-install-folder}
    ${npm-bin:output} install git+${downloads:parsoid-git}
    cd ${:parsoid-package-folder}
    ${npm-bin:output} install

#########
# install node module forever
[forever-install]
<= base-command
cmds = 
    cd ${buildout:parts-directory}
    ${npm-bin:output} install -g forever

[forever-bin]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/forever
inline = 
    #! /usr/bin/env bash
    ${nodejs-build:location}/lib/node_modules/forever/bin/forever $@
mode = 755

#########
# install sinopia the private npm registry.
[sinopia-install]
<= base-command
cmds = 
    cd ${buildout:parts-directory}
    ${npm-bin:output} install -g sinopia

[sinopia-bin]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/sinopia
inline =
    #! /usr/bin/env bash
    ${node-bin:output} ${nodejs-build:location}/bin/sinopia $@
mode = 755

#########
# install private bower the private npm registry.
[private-bower-install]
<= base-command
cmds = 
    cd ${buildout:parts-directory}
    ${npm-bin:output} install -g private-bower

[private-bower-bin]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/private-bower
inline =
    #! /usr/bin/env bash
    ${node-bin:output} ${nodejs-build:location}/bin/private-bower $@
mode = 755
