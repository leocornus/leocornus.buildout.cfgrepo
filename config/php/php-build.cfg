####################################################################
# build PHP from source code distribution.
#
####################################################################

# this section will specify the versions for different libs/parts.
[src-versions]
php = 5.6.2

# this section will specify the urls to download differtn parts.
# you might need change the url to fit with your location.
[downloads]
php = http://ca.php.net/get/php-${src-versions:php}.tar.gz/from/this/mirror

[php-src]
recipe = hexagonit.recipe.download
url = ${downloads:php}
strip-top-level-dir = false

[php-build]
recipe = hexagonit.recipe.cmmi
#url = ${downloads:php}
#pre-configure-hook = ${buildout:directory}/config/shellutil.py:copyKrb5
path = ${php-src:location}/php-${src-versions:php}
keep-compile-dir = true
####
# some settings for compile and build php from source code.
php-build-mysql-options =
    --with-mysql
    --with-pdo-mysql
    --with-mysqli
# using the following if mysql installed from source.
# After build success, we could use php command line to verify
# mysql lib: php -i
#    --with-mysql=${mariadb-build:location}
#    --with-pdo-mysql=${mariadb-build:location}
#    --with-mysqli=${mariadb-build:location}/bin/mysql_config   
php-build-libdir-options = 
# option to enable embed:
enable-embed = --enable-embed
# options for 64 bit hardware, 
# some of the 64 bit OSs are using lib64 for libraries.
# comment out them for a 32 bit hardware
# if you compile from source code, the library folder will
# be **lib** unless your specified it as **lib64**.
#    --libdir=${buildout:directory}/parts/php-build/lib64
#    --with-libdir=lib64
####
# configuration options.
configure-options =
    ${:php-build-libdir-options}
    --enable-fpm
# this is for working with apache httpd server.
#    --with-apxs2=${buildout:directory}/parts/apache-build/bin/apxs
    ${:php-build-mysql-options}
    --with-mcrypt
    --with-openssl
    --with-zlib-dir
    --enable-zip
    --with-bz2
    --with-gd
    --enable-gd-native-ttf
    --with-jpeg-dir
    --with-png-dir
    --with-freetype-dir
    --with-iconv
    --with-curl
    --with-gettext
    --enable-ftp
    --enable-mbstring
    --with-sqlite
    --enable-sqlite-utf8
    --enable-xml
    --with-xmlrpc
    --enable-bcmath
    --enable-sockets
# enable opcache by default, more details check the manual:
# http://php.net/manual/en/opcache.installation.php
    --enable-opcache
# enable the embed share lib, so uWSGI could embed PHP.
    ${:enable-embed}

########
# part to install Avazon AWS PHP sdk.
# AWS PHP sdk is distributed as a pear module.
# So we need pear installed for php build.
# Check more details here: http://aws.amazon.com/sdkforphp/
[aws-php-sdk]
recipe = plone.recipe.command
pear-bin = ${php-build:location}/bin/pear
command = 
    ${:pear-bin} channel-discover pear.amazonwebservices.com
    ${:pear-bin} install aws/sdk
