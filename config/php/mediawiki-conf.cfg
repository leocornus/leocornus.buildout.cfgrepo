##################################################################
#
# try to generate the MediaWiki configuration file.
# 
# LocalSettings.php
#

#############################################
#
# generate the mediawiki configuration file fomr inline.
# which is easer to organize and maintain.
#
[mediawiki-conf]
# the base part is defined in file config/base.cfg
<= base-generate-file-from-inline
# assume wiki is installed in a WordPress installation.
target-folder = ${settings:document-root}/wiki
filename = LocalSettings.php
mode = 644
file-content  = 
    <?php
    ${mw-conf-basic:the-content}
    ${mw-conf-cache:the-content}
    ${mw-conf-permissions:the-content}
    ${mw-conf-skins:the-content}
    ${mw-conf-extensions:the-content}

##################################
#
# this part will hold basic configurations.
[mw-conf-basic]
wgSitename = ValutWiki
wgServer = http://dev.vault.leocorn.com

wgDBtype = mysql
wgDBserver = 10.160.192.88:9025
wgDBname = vaultone
wgDBuser = devvault
wgDBpassword = vaultpassword

wgFileExtensions = 'bmp', 'doc', 'docx', 'gif', 'ics', 'jpg', 'jpeg', 'pdf', 'png', 'pps', 'ppt', 'pptx', 'svg', 'swf', 'vcs', 'xls', 'xlsx', 'zip', 'csv', 'json', 'js', 'vsd', 'ico'

no-reply-email = no-reply@leocorn.com
# the content
the-content = 
    # Protect against web entry
    if ( !defined( 'MEDIAWIKI' ) ) {
    	exit;
    }
    ## Uncomment this to disable output compression
    # $wgDisableOutputCompression = true;
# wiki site information.
    $wgSitename = "${:wgSitename}";
    ## The URL base path to the directory containing the wiki;
    ## defaults for all runtime URL paths are based off of this.
    ## For more information on customizing the URLs
    ## (like /w/index.php/Page_title to /wiki/Page_title) please see:
    ## https://www.mediawiki.org/wiki/Manual:Short_URL
    $wgScriptPath = "/wiki";
    $wgArticlePath = "/wiki/$1";
    ## The protocol and server name to use in fully-qualified URLs
    $wgServer = "${:wgServer}";
    ## The URL path to static resources (images, scripts, etc.)
    $wgResourceBasePath = $wgScriptPath;
# site logo
    ## The URL path to the logo.  
    ## Make sure you change this from the default,
    ## or else you'll overwrite your logo when you upgrade!
    $wgLogo = "$wgResourceBasePath/resources/assets/wiki.png";
# user preference options
    ## UPO means: this is also a user preference option
    $wgEnableEmail = true;
    $wgEnableUserEmail = true; # UPO
    $wgEmergencyContact = "${:no-reply-email}";
    $wgPasswordSender = "${:no-reply-email}";
    $wgEnotifUserTalk = false; # UPO
    $wgEnotifWatchlist = false; # UPO
    $wgEmailAuthentication = true;
# database setting.
    ## Database settings
    $wgDBtype = "${:wgDBtype}";
    $wgDBserver = "${:wgDBserver}";
    $wgDBname = "${:wgDBname}";
    $wgDBuser = "${:wgDBuser}";
    $wgDBpassword = "${:wgDBpassword}";
    # MySQL specific settings
    $wgDBprefix = "mw_";
    # MySQL table options to use during installation or update
    $wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=utf8";
    # Experimental charset support for MySQL 5.0.
    $wgDBmysql5 = false;
# image uploads.
    ## To enable image uploads, make sure the 'images' directory
    ## is writable, then set this to true:
    $wgEnableUploads = true;
    #$wgUseImageMagick = true;
    #$wgImageMagickConvertCommand = "/usr/bin/convert";
    # InstantCommons allows wiki to use images from 
    # https://commons.wikimedia.org
    $wgUseInstantCommons = false;
    ## If you use ImageMagick (or any other shell command) on a
    ## Linux server, this will need to be set to the name of an
    ## available UTF-8 locale
    $wgShellLocale = "en_US.utf8";
    ## If you want to use image uploads under safe mode,
    ## create the directories images/archive, images/thumb and
    ## images/temp, and make them all writable. Then uncomment
    ## this, if it's not already uncommented:
    #$wgHashedUploadDirectory = false;
    ## tell mediawiki to ignore mimetypes set to false to ignore
    #$wgVerifyMimeType = true;
    ## set permitted file extensions for upload
    $wgFileExtensions = array(${:wgFileExtensions});
# mics
    ## Path to the GNU diff3 utility. Used for conflict resolution.
    $wgDiff3 = "/usr/bin/diff3";
    # Site language code, should be one of the list in 
    # ./languages/Names.php
    $wgLanguageCode = "en";
    $wgSecretKey = "9915252ed4463f39159eb3ec3c6d27aca4fe4f561124e05d47353a61e1a461be";
    # Site upgrade key. Must be set to a string 
    # (default provided) to turn on the
    # web installer while LocalSettings.php is in place
    $wgUpgradeKey = "d8c815d40e80e97a";
# config the licensing and copyright for content.
    ## For attaching licensing metadata to pages, and displaying an
    ## appropriate copyright notice / icon. GNU Free Documentation
    ## License and Creative Commons licenses are supported so far.
    $wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
    $wgRightsUrl = "http://creativecommons.org/licenses/by/4.0/";
    $wgRightsText = "Attribution 4.0 International";
    $wgRightsIcon = "https://i.creativecommons.org/l/by/4.0/88x31.png";

##########################
#
# configuration to set up caches.
#
[mw-conf-cache]
the-content =
    ## Shared memory settings
    $wgMainCacheType = CACHE_NONE;
    $wgMemCachedServers = array();
    ## Set $wgCacheDirectory to a writable directory on the 
    ## web server to make your wiki go slightly faster.
    ## The directory should not
    ## be publically accessible from the web.
    #$wgCacheDirectory = "$IP/cache";

###############################
#
# configuration for permissions.
#
[mw-conf-permissions]
the-content =
    # The following permissions were setup a private wiki 
    $wgGroupPermissions['*']['createaccount'] = false;
    $wgGroupPermissions['*']['edit'] = false;
    $wgGroupPermissions['*']['read'] = false;

##########################
#
# configuration for skins.
#
[mw-conf-skins]
# using the vector as the default skins.
wgDefaultSkin = vector
the-content =
    ## Default skin: you can change the default skin. 
    ## Use the internal symbolic
    ## names, ie 'vector', 'monobook':
    $wgDefaultSkin = "${:wgDefaultSkin}";
    # Enabled skins.
    # The following skins were automatically enabled:
    wfLoadSkin( 'CologneBlue' );
    wfLoadSkin( 'Modern' );
    wfLoadSkin( 'MonoBook' );
    wfLoadSkin( 'Vector' );

##############################
#
# configuarion for extensions.
#
[mw-conf-extensions]
the-content =
    # Enabled Extensions. 
    # Most extensions are enabled by including 
    # the base extension file here
    # but check specific extension documentation for more details
    # The following extensions were automatically enabled:
    wfLoadExtension( 'Cite' );
    wfLoadExtension( 'CiteThisPage' );
    wfLoadExtension( 'SyntaxHighlight_GeSHi' );
    wfLoadExtension( 'WikiEditor' );

############################################
#
# the legacy way to generate configuration file from a template.
#
[mediawiki-conf-template]
<= base-generate-file-from-template

target-folder = ${wordpress-conf:target-folder}/wiki
filename = LocalSettings.php
# this default mediawiki config file is assume that
# the media wiki is installed under wiki sub-folder
# or the html root documentation folder.
input = cfgrepo/template/php/${:filename}.in
# the default output.
#output = ${:target-folder}/${:filename}

########
# options for mediawiki configruation file
wgSitename = wiki
# defaut to config mediawiki to use short URL.
wgScriptPath = /wiki
wgScriptExtension = .php
wgArticlePath = /wiki/$1
wgUsePathInfo = true
# database settings.
wgDBtype = mysql
wgDBhost = 10.0.0.1
# using the ports setting by default.
wgDBport = ${ports:mariadb}
wgDBname = mwdb
wgDBuser = mwuser
wgDBpassword = mwpassword
wgDBprefix = wm_
# user preferences
wgEmergencyContact = "site.admin@mysite.com"
wgPasswordSender = "NOREPLY@mysite.com"
# default skin
wgDefaultSkin = standard
