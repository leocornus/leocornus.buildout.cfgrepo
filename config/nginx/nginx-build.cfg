###################################################################
# The buildout config file to compile and build Nginx 
# web server from source code.
# This config will also try to add 3rd modules to the Nignx build.
###################################################################

# this section will specify the versions for 
# different libs/parts.
[src-versions]
nginx = 1.0.10
nginx-upload-progress = 0.8.4

# this section will specify the urls to download differtn parts.
# you might need change the url to fit with your location.
[downloads]
nginx = http://nginx.org/download/nginx-${src-versions:nginx}.tar.gz
# Using the github tarball for the upload module.
nginx-upload-progress = https://github.com/masterzen/nginx-upload-progress-module/tarball/v${src-versions:nginx-upload-progress}
# we will get substitutions module from the svn repo.
nginx-substitutions4nginx-trunk = http://substitutions4nginx.googlecode.com/svn/trunk/

# nginx exnternal modules
[nginx-upload-progress]
recipe = plone.recipe.command
src-folder = ${buildout:directory}/parts/nginx-upload-progress
folder-name = masterzen-nginx-upload-progress-module-82b35fc
command =
    mkdir -p ${:src-folder}
    cd ${:src-folder}
    wget --no-check-certificate -O ${:folder-name}.tar.gz ${downloads:nginx-upload-progress}
    tar -xzvf ${:folder-name}.tar.gz

# nginx exnternal modules
[nginx-subs]
recipe = plone.recipe.command
src-folder = ${buildout:directory}/parts/nginx-subs-progress
folder-name = substitutions4nginx-trunk
command =
    mkdir -p ${:src-folder}
    cd ${:src-folder}
    svn co ${downloads:nginx-substitutions4nginx-trunk} ${:folder-name}

[nginx-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:nginx}
# change to true if you want keep the compile dir.
keep-compile-dir = true
# adding the modules here, one line for each module.
modules = 
    --add-module=${nginx-upload-progress:src-folder}/${nginx-upload-progress:folder-name}
    --add-module=${nginx-subs:src-folder}/${nginx-subs:folder-name}
configure-options =
    --with-http_ssl_module
    --with-http_sub_module
    ${:modules}
