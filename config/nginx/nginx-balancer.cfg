###################################################################
#
# this buildout config try to host the configuration to 
# set up Nginx as a load balancer server.
#
# some of the reference document:
# * http://nginx.org/en/docs/http/load_balancing.html
# * https://www.nginx.com/blog/load-balancing-with-nginx-plus/
#

[buildout]
extends = 
    nginx-conf.cfg
    nginx-utils.cfg

###################################################################
#
# the simplest configuration to set Nginx as a balancer.
#
[nginx-balancer-base]
# could consolidate to using the base config.
<=nginx-base-server
# set the default server name to the frontend hostname
server-name = ${hosts:frontend-hostname} 
# default ip is the frontend ip from general settings.
ip = ${hosts:frontend-ip}
# the default port is the port for nginx.
port = ${ports:nginx} 
listen = ${:ip}:${:port}
##########
# ------------ auth-basic directive
# add the authentication directive, default is nothing
# check the example part below for adding the basic_auth to a proxy server
auth-basic =
##########
# using the backend as the default upstream name.
upstream-name = backend
##########
# servers list for upsteam.
# the default will be empty. Here are some examples:
# 
# upstream-servers = 
#     server host-1:8080;
#     server www.example.com;
#     server solr-2:8983 max_fails=3 fail_timeout=15s weight=1;
#
upstream-servers =  
##########
# some settings for proxy server.
# set to empty for now. 
# check the config/nginx/nginx-proxy.cfg for some example.
proxy-settings = 
locations =
    location / {
        ${:auth-basic}
        proxy_pass http://${:upstream-name};
        ${:proxy-settings}
    }
##########
# set the Nginx server directive.
servers +=
    upstream ${:upstream-name} {
        ${:upstream-servers}
    }

[nginx-balancer-solr]
<= nginx-balancer-base
upstream-servers = 
    server solr-1:8983;
    server solr-2:8983;
