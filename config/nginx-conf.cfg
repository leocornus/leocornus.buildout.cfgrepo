###################################################################
#
# the standalone nginx web server config file.
#
###################################################################

[users]
# the default run user for Nginx server.
nginx = nginx

[settings]
# log directory save all log files.
log-directory = ${buildout:directory}/var/log
# etc directory save all configuration files.
etc-directory = ${buildout:directory}/etc
# run directory save all pid files.
run-directory = ${buildout:directory}/var

nginx-listen-port-ssl = 443
nginx-error_log-ssl = ${:log-directory}/nginx-ssl-error.log
nginx-access_log-ssl = ${:log-directory}/nginx-ssl-access.log

########
# this part will generate the config file for Nginx Web server.
[nginx-conf]
recipe = collective.recipe.template
# properties will feed in the templage.
# this depends on nginx-build.cfg
output = ${settings:etc-directory}/nginx.conf
input = cfgrepo/template/nginx.conf.in
mode = 644
nginx-build-location = ${nginx-build:location}
####
# settings and default values for Nginx Web Server.
# these variable are used for http section of Nginx config file.
run-user = ${users:nginx} 
worker_processes = 5
pid = ${settings:log-directory}/nginx.pid

####
# upstream configuration.
upstreams =

####
# server configuation.
servers = 
    ${nginx-fpm-server:servers}

####
# the includes will be put in to the main nginx.conf file
# as an include line.
# We could use template recipe to generate another Nginx config file
# and include here.
includes = 
    # nothing for now.
    # include /full/path/to/config/file.conf

####
# configs for supervisor.
supervisor-priority = 50
supervisor-program = 
    [program:nginx]
    command = ${nginx-build:location}/sbin/nginx -c ${:output}
    process_name = nginx
    directory = ${nginx-build:location}/sbin
    priority = ${:supervisor-priority}
    redirect_stderr = false

########
# the basic configuration for a Nginx server
[nginx-server-base-config]
####
# The following settings are for server section.
# This is provided as examples.
document-root = ${settings:run-directory}/www
server_name = localhost
listen = 127.0.0.1:80
# this will set the maxium POST sie, in byte,
# the default here is 2GB
client_max_body_size = 2147483647
error_log = ${settings:log-directory}/nginx-error.log
# set up nginx error_log level, one of following: 
# debug info notice warn error crit
error_log-level = debug
access_log = ${settings:log-directory}/nginx-access.log
####
# servers
locations = # no location for now.
servers = 
    server {
        client_max_body_size ${:client_max_body_size};

        listen ${:listen};
        server_name ${:server_name}; 

        error_log ${:error_log} ${:error_log-level};
        access_log ${:access_log};

        root ${:document-root};
        #index index.php;
        ${:locations}
    }


########
# A sample nginx server section, which could be used directly 
# in the main Nginx configuration file. 
# The fastcgi settings here is based on the Django built-in flup server.
[nginx-fcgi-sample-server]
# clone from the base config.
<= nginx-server-base-config
fastcgi_pass = 127.0.0.1:8080
####
# locations
locations = 
    location / {

        # the default include seems break the PATH_INFO param.
        #include ${nginx-build:location}/conf/fastcgi_params;
        # some fastcgi params
        fastcgi_connect_timeout 60;
        fastcgi_send_timeout 180;
        fastcgi_read_timeout 180;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_intercept_errors on;

        fastcgi_pass ${:fastcgi_pass};
        fastcgi_param PATH_INFO $fastcgi_script_name;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param CONTENT_TYPE $content_type;
        fastcgi_param CONTENT_LENGTH $content_length;
        fastcgi_pass_header Authorization;
        fastcgi_param REMOTE_ADDR $remote_addr;

        # track uploads in the 'uploadprogress' zone
        # uploads expires 30s after they finish.
        #track_uploads uploadprogress 30s;
    }

########
# basic config for using php-fpm as fastcgi for PHP application.
[nginx-fpm-server]
<= nginx-server-base-config
fastcgi_pass = 127.0.0.1:9100
APPLICATION_ENV = development
locations = 
    # if the request starts with our frontcontroller, pass it on to fastcgi
    location ~ \.php$ {

        # some fastcgi params
        fastcgi_connect_timeout 60;
        fastcgi_send_timeout 180;
        fastcgi_read_timeout 180;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_intercept_errors on;
        #  
        #fastcgi_index index.php;
        fastcgi_pass ${:fastcgi_pass};
        include ${nginx-build:location}/conf/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME ${:document-root}$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_script_name;
        # this is for Zend Application.
        #fastcgi_param APPLICATION_ENV ${:APPLICATION_ENV};

        # track uploads in the 'uploadprogress' zone
        # uploads expires 30s after they finish.
        #track_uploads uploadprogress 30s;
    }
