###########################################
# following are some sample buildout parts.

########
# the base config part for using command line options to start 
# uWSGI server.
[uwsgi-base-cli-conf]
uwsgi-bin = ${uwsgi-build-profile:bin-name}
uwsgi-port = ${ports:uwsgi}
uwsgi-file = cfgrepo/template/uwsgi/quickstart/hello.py
# Flask is uing callable option.
# there should be other application framework using this.
# if you don't need it, just set it to empty.
uwsgi-callable = --callable app
uwsgi-options = --http ${hosts:uwsgi}:${:uwsgi-port} --wsgi-file ${:uwsgi-file} ${:uwsgi-callable}
# This will spawn 4 processes (each with 2 threads), 
# a master process (will respawn your processes when they die)
uwsgi-process = --master --process 4 --threads 2
# adding the stats monitoring...
uwsgi-stats = --stats ${hosts:uwsgi}:${ports:uwsgi-stats}
# the name for supervisor.
process-name = uwsgi
supervisor-program = 
    [program:${:process-name}]
    command = ${:uwsgi-bin} ${:uwsgi-options} ${:uwsgi-process} ${:uwsgi-stats}
    process_name = ${:process-name} 
    user = ${users:uwsgi}

########
# this part will generate the supervisor program config file
# to run the first python WSGI application from 
# uWSGI quickstart guide.
#
# for the simple python app, we are using all command line options, 
# for complicated app, config file should be the better choice.
# uWSGI supports all kind of config files, including ini, yml, etc.
# Also command line is always good for testing...
#
[uwsgi-hello-py-conf]
<= uwsgi-base-cli-conf
uwsgi-file = cfgrepo/template/uwsgi/quickstart/hello.py
# we don't need callable option. set to empty.
uwsgi-callable =
process-name = uwsgi-hello

# simple config part for flask application.
[uwsgi-hello-flask-conf]
<= uwsgi-base-cli-conf
uwsgi-file = cfgrepo/template/uwsgi/quickstart/helloflask.py
# we don't need callable option. set to empty.
uwsgi-callable = --callable app
process-name = uwsgi-flask

################################################
# config the command for supervord to execute cgi through uwsgi.
#
[uwsgi-cgi-conf]
uwsgi-port = ${ports:uwsgi}
uwsgi-options = --plugin cgi --http ${hosts:uwsgi}:${:uwsgi-port}
# This will spawn 4 processes (each with 2 threads), 
# a master process (will respawn your processes when they die)
uwsgi-process = --master --process 4 --threads 2
# adding the stats monitoring...
uwsgi-stats = --stats ${hosts:uwsgi}:${ports:uwsgi-stats}
supervisor-program = 
    [program:uwsgi-hello]
    command = ${uwsgi-build-profile:bin-name} ${:uwsgi-options} ${:uwsgi-process} ${:uwsgi-stats}
    process_name = uwsgi-hello
    user = ${users:uwsgi}

#################################################
# using ini file to config uwsgi to execute cgi.
# this will depend on cgi-plugin.
#
[uwsgi-cgi-ini-conf]
# parent part in defined in config/base.cfg
<= base-generate-file-from-inline
filename = uwsgi-cgi.ini
target-folder = ${buildout:directory}/etc
#### options for the file content.
cgi-document-root = /var/www/cgi-bin
file-content = 
    # uwsgi-cgi.ini
    [uwsgi]
    socket = ${hosts:uwsgi}:${ports:uwsgi}
    plugin = cgi
    cgi = ${:cgi-document-root}
    cgi-allowed-ext = .pl
    cgi-allowed-ext = .cgi
#### supervisor program config.
supervisor-program = 
    [program:uwsgi-cgi]
    command = ${uwsgi-build-profile:bin-name} --ini ${:output}
    process_name = uwsgi-cgi
    user = ${users:uwsgi}

###################################
# config to run uwsgi php plugin from command line
#
[uwsgi-php-conf]
uwsgi-port = ${ports:uwsgi}
uwsgi-options = --plugin php --socket ${hosts:uwsgi}:${:uwsgi-port}
# This will spawn 4 processes (each with 2 threads), 
# a master process (will respawn your processes when they die)
uwsgi-process = --master --processes 4 --cheaper 2
# adding the stats monitoring...
uwsgi-stats = --stats ${hosts:uwsgi}:${ports:uwsgi-stats}
supervisor-program = 
    [program:uwsgi-php]
    command = ${uwsgi-build-profile:bin-name} ${:uwsgi-options} ${:uwsgi-process} ${:uwsgi-stats}
    process_name = uwsgi-php
    user = ${users:uwsgi}

#################################################
# using ini file to config uwsgi to execute php plugin.
# this will depend on 
# - php-plugin 
# - embed enabled php
# - Nginx
#
[uwsgi-php-ini-conf]
# parent part in defined in config/base.cfg
<= base-generate-file-from-inline
filename = uwsgi-php.ini
target-folder = ${buildout:directory}/etc
#### options for the file content.
file-content = 
    # uwsgi-php.ini
    [uwsgi]
    socket = ${hosts:uwsgi}:${ports:uwsgi}
    plugin = php
    # using master process.
    master = true
    # max 4 threads / processes
    processes = 4
    # keep 2 processes live
    cheaper = 2
    # turn on the stats.
    stats = ${hosts:uwsgi}:${ports:uwsgi-stats}
#    php-allowed-ext = .php
#    php-allowed-ext = .inc
#### supervisor program config.
supervisor-program = 
    [program:uwsgi-php]
    command = ${uwsgi-build-profile:bin-name} --ini ${:output}
    process_name = uwsgi-php
    user = ${users:uwsgi}
