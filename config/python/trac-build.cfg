###################################################################
# buildout config file for build trac instance and
# some handful tools.
###################################################################

[buildout]
eggs = 
    pep8 == 1.4
    Genshi
    Trac == 1.0.1
    TracXMLRPC
    TracCustomFieldAdmin
    WorkflowEditorPlugin
    TracMigratePlugin
    TracAccountManager
    TracHTTPAuth

develop = 
    ${trac-plugins-src:location}/TracXMLRPC
    ${trac-plugins-src:location}/TracCustomFieldAdmin
    ${trac-plugins-src:location}/WorkflowEditorPlugin
    ${trac-plugins-src:location}/TracMigratePlugin
    ${trac-plugins-src:location}/TracAccountManager
    ${trac-plugins-src:location}/TracHTTPAuth

[trac-dependencies]
eggs = 
    ${buildout:eggs}

################
# checkout trac plugins
#
# NOTE: we will need execute the install command first:
#  - $ bin/buildout -N install trac-plugins-src
#
# because the eggs will be loaded first, 
# before all these plugins are downloaded.
# 
[trac-plugins-src]
recipe = infrae.subversion
urls = 
    https://trac-hacks.org/svn/xmlrpcplugin/trunk TracXMLRPC
    https://trac-hacks.org/svn/customfieldadminplugin/0.11 TracCustomFieldAdmin
    https://trac-hacks.org/svn/workfloweditorplugin/trunk WorkflowEditorPlugin
    https://trac-hacks.org/svn/tracmigrateplugin/0.12 TracMigratePlugin
    https://trac-hacks.org/svn/accountmanagerplugin/tags/acct_mgr-0.4.3 TracAccountManager
    https://trac-hacks.org/svn/httpauthplugin/trunk TracHTTPAuth

###############
# This part will generate the wsgi script for uWSGI to handle 
# Trac request.
#
[trac-wsgi-bin]
recipe = zc.recipe.egg
#########
# some settings:
###############
# Trac has 2 types of environment:
# - TRAC_ENV, Trac will run as a single project mode.
# - TRAC_ENV_PARENT_DIR, Trac will run as a multiple projects mode.
# We use the multiple projects mode as default.
#
trac-env-type = TRAC_ENV_PARENT_DIR
###############
# this is the value for trac-env-type,
# default is for multiple project mode, the parent dir for all 
# trac projects.
# If you set to use single project mode, 
# you need use the full path to your trac project, for example
#   ${buildout:directory}/var/trac/MyTracProject
trac-project-dir = ${buildout:directory}/var/trac
###############
# this is the full path to the generated wsgi script.
# It will be as the --wsgi-file for uWSGI.
trac-wsgi-script = ${buildout:bin-directory}/trac.wsgi
# a fake entry point for this egg recipe
entry-points = ${:trac-wsgi-script}=os:getpid
eggs = ${trac-dependencies:eggs}
initialization = 
    import sys
    import os
    import trac.web.main

    sys.stdout = sys.stderr

    os.environ['${:trac-env-type}'] = '${:trac-project-dir}'
    os.environ['PYTHON_EGG_CACHE'] = '${:trac-project-dir}/.egg'

    application = trac.web.main.dispatch_request

#################################################################
# create trac project and some trac admin management
#
#################################################################
[trac-init-project]
<= base-command
trac-project-name = Trac on uWSGI
trac-project-dir = var/trac/traconuwsgi
# database connection string. following are connection strings for
# supported databases:
# 
# SQLite     sqlite:db/trac.db
# PostgreSQL postgres://johndoe:letmein@localhost:9342/trac
# MySQL      mysql://johndoe:letmein@localhost:3306/trac
#
trac-db = sqlite:db/trac.db
trac-admin-bin = ${buildout:bin-directory}/trac-admin
cmds = 
    mkdir -p ${:trac-project-dir}
    echo 'Execuate the following command to create your project'
    echo "${:trac-admin-bin} ${:trac-project-dir} initenv '${:trac-project-name}' ${:trac-db}"
