###################################################################
#
# Some base buildout parts for the build repository.
# This also contains the default values for parts like:
# settings, users, hosts, ports, etc. 
# Buildout allows user to use <= to extends another part.
# For example:
#
# [part-base]
# prop-one = one
# prop-two = two
#
# [my-part]
# <= part-base
# prop-one = my-one
# prop-three = three 
#
###################################################################

# the basic settings for all buildout parts.
# try to provide a minimium list of settings properties
# which are used across all buildout parts.
[settings]
# log directory save all log files.
log-directory = ${buildout:directory}/var/log
# etc directory save all configuration files.
etc-directory = ${buildout:directory}/etc
# run directory save all pid files.
run-directory = ${buildout:directory}/var
# the document root for web server, PHP application start from here.
# defaule is var/www
document-root = ${:run-directory}/www

[hosts]
# hostname is normally the domain name, 
# it will be used by Nginx as the server_name
#
# IP is treat as a kind of host.
frontend-hostname = localhost
frontend-ip = 127.0.0.1
# default hosts for php-fpm fast cgi engine.
php-fpm = 127.0.0.1
# the bind-address for MariaDB server, default is 0.0.0.0
mariadb-ip = 0.0.0.0
supervisord = 127.0.0.1
uwsgi = 127.0.0.1
# PostgreSQL supports multiple ips, 
# comma-separated list of addresses
# default is 'localhost'
# * for all ips.
postgresql-ip = localhost

# set up the binding network ports for different applications.
[ports]
frontend = 80
mariadb = 3306
nginx = ${:frontend}
php-fpm = 9100
supervisord = 9008
# tomcat server port
tomcat-server = 8005
# tomcat http connector port
tomcat-http = 8080
tomcat-ssl = 8443
# tomcat ajp connector port
tomcat-ajp = 8009
uwsgi = 9090
tracd = 9091
# the monitoring port for uWSGI
uwsgi-stats = 9091
# default port for PostgreSQL
postgresql = 5432

[users]
php-fpm = php
php = php
mariadb = mariadb
parsoid = parsoid
uwsgi = uwsgi
postgresql = postgre
tracd = tracd

#######
# the base part to generate a textfile from a template.
#######
[base-generate-file-from-template]
recipe = collective.recipe.template
# the file name to generate
filename = generated.file
# the folder for the gneerated file.
target-folder = ${settings:etc-directory}
input = cfgrepo/template/${:filename}.in
# the default output file's mode
mode = 644
output = ${:target-folder}/${:filename}

#######
# the base part to generate a textfile from an inline input.
# this is 
#######
[base-generate-file-from-inline]
recipe = collective.recipe.template
# the file name to generate
filename = generated.file
file-content = 
# this line will NOT be included in the generated file.
    #!/bin/bash
    # this line will be included in the generated file.
    echo 'Hello Inline Content'
# the folder for the gneerated file.
target-folder = ${buildout:directory}/etc
input = inline:
    ${:file-content}
# the default output file's mode
mode = 644
output = ${:target-folder}/${:filename}

########
# the base part for download a package from internet.
########
[base-download]
recipe = hexagonit.recipe.download
# default destination is buildout['parts-directory']
#destination = 
# url tells the source
#url = 
# default strip top level dir
strip-top-level-dir = true
# set this to ture for download only.
download-only = false

##########
# the base part to execute some shell commands
##########
[base-command]
recipe = collective.recipe.cmd
on_install = true
on_update = false
# put your commands here,
# one line for each command.
cmds = 
    ls -la
