###################################################################
#
# the standalone openresty web server config file.
#
###################################################################

[users]
# the default run user for OpenResty server.
nginx = nginx

# this part will generate the (root) configuration file for OpenResty.
[openresty-conf]
<= base-generate-file-from-inline
filename = openresty.conf
target-folder = ${buildout:directory}/etc
file-content = 
    ${:run-user}
    worker_processes  ${:worker_processes};
    pid ${:pid};
    # set daemon off by default.
    daemon off;
    error_log ${:error_log};

    events {
        worker_connections 1024;
    }
    http {
        ${:http-defaults}

        ${:upstreams}

        ${:servers}

        ${:includes}
    }
# this variable allow to set run user to empty,
# which will be current user to run, good for development phase.
run-user = user ${users:nginx}; 
worker_processes = 1
pid = ${settings:log-directory}/openresty.pid
error_log = ${settings:log-directory}/openresty-error.log

##############################
# configuration for supervisor program.
#
supervisor-priority = 50
nginx-bin = ${:openresty-build-location}/nginx/sbin/nginx
supervisor-program = 
    [program:openresty]
    command = ${:nginx-bin} -c ${:output}
    process_name = openresty
    directory = ${:openresty-build-location}/nginx
    priority = ${:supervisor-priority}
    redirect_stderr = false

##############################
# the build location will help to find:
#   * the binary files.
#   * mime type config
#   * fastcgi config
#
openresty-build-location = ${openresty-build:location}
############################
# the default settings for http section.
#
http-defaults =
    include ${:openresty-build-location}/nginx/conf/mime.types;
    default_type application/octet-stream;
    sendfile on;
    server_tokens ${:server_tokens};

    # turn on gzip
    gzip on;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_vary on;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_buffers 16 8k;
    # disable gzip for IE 6.
    gzip_disable .MSIE [1-6].(?!.*SV1).;
# turn on or off server tokens, value will be on or off.
# this only turn off the verion infor of Server header.
# full control of header could use the headers more module
# https://github.com/openresty/headers-more-nginx-module
server_tokens = on

##############################
# upstream could be:
# - fastcgi like phpfpm, Python
# - J2EE Web Container 
# - Application server like Zope/Plone
# empty upstream for now.
#
upstreams =
# add the simple server for now.
servers = 
    server {
        listen 8080;
        error_log ${settings:log-directory}/or-simple-error.log;
        access_log ${settings:log-directory}/or-simple-access.log;
        location / {
            default_type text/html;
            content_by_lua '
                ngx.say("<p>hello, world</p>")
                ngx.say("<pre>")
                ngx.print(ngx.req.raw_header())
                ngx.say("</pre>")
            ';
        }
    }
# nothing to include for now.
includes =
