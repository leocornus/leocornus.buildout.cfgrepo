####################################################################
#
# buildout parts to configure zookeeper.
#
####################################################################

[ports]
# the default forlder. 
zookeeper-client-port = 2181

[users]
zookeeper = ubuntu

[settings]
java-build-location = /opt/dev/apps/java/parts/java-build
zk-server-name = zk-server-1

# some NOTEs
# 
# we need decide a zookeeper conf dir, using
# $ZOOCFGDIR

[zookeeper-conf]
zk-server-bin = ${zookeeper-build:location}/bin/zkServer.sh
zoo-cfg-dir = ${zoo-standalone-cfg:target-folder}
#set up the supervisor program.
supervisor-priority = 100
supervisor-program-name = ${settings:zk-server-name}
supervisor-program =
    [program:${:supervisor-program-name}]
    command = ${:zk-server-bin} start-foreground
    process_name = ${:supervisor-program-name}
    directory = ${zookeeper-build:location}
    priority = ${:supervisor-priority}
    redirect_stderr = false
# using SOLR_JAVA_HOME to set the JDK location.
# it is used in the solr shell script.
    environment = JAVA_HOME=${settings:java-build-location},ZOOCFGDIR=${:zoo-cfg-dir}
    user = ${users:zookeeper}

######
# configuration example for standalone zoo.cfg
#
# tickTime=2000
# dataDir=/var/lib/zookeeper/
# clientPort=2181
# initLimit=5
# syncLimit=2
# server.1=zoo1:2888:3888
# server.2=zoo2:2888:3888
# server.3=zoo3:2888:3888
#
[zoo-standalone-cfg]
# the base part is defined in file 
# - config/base.cfg
<= base-generate-file-from-inline
filename = zoo.cfg
target-folder = ${buildout:directory}/etc/zookeeper
zoo-data-dir = ${buildout:directory}/var/zookeeper
file-content =
    # The number of milliseconds of each tick
    tickTime = 2000
    # the directory where the snapshot is stored.
    # do not use /tmp for storage, /tmp here is just
    # example sakes.
    # this directory will also store all log files
    # unless the dataLogDir is set to different folder or device.
    dataDir = ${:zoo-data-dir}
    clientPort = ${ports:zookeeper-client-port}

######
# config file for zookeeper cluster config. 
#
[zoo-cfg]
<= zoo-standalone-cfg 
zoo-servers = 
    server.1=zoo1:2888:3888
    server.2=zoo2:2888:3888
    server.3=zoo3:2888:3888

file-content +=
    initLimit = 5
    syncLimit = 2
    ${:zoo-servers}

#######
#
# this part will generate the log4j configuration for ZooKeeper server.
# it starts from the sample conf file from ZooKeeper installation.
# 
# TODO: expose more seeting to buildout part...
#
[zoo-log4j-cfg]
# the base part is defined in file 
# - config/base.cfg
<= base-generate-file-from-inline
filename = log4j.properties
# the log4j.properties should be stored in the same folder of 
# zoo.cfg.
target-folder = ${buildout:directory}/etc/zookeeper
# copied from the sample log4j config. 
# the loggin files are stored in dataDir unless
# the dataLogDir is set up.
zookeeper.root.logger=INFO, CONSOLE
zookeeper.console.threshold=INFO
zookeeper.log.dir=.
zookeeper.log.file=zookeeper.log
zookeeper.log.threshold=DEBUG
zookeeper.tracelog.dir=.
zookeeper.tracelog.file=zookeeper_trace.log

file-content =
    # Define some default values that can be overridden by system properties
    # moved to buildout part.
    #zookeeper.root.logger=INFO, CONSOLE
    #zookeeper.console.threshold=INFO
    #zookeeper.log.dir=.
    #zookeeper.log.file=zookeeper.log
    #zookeeper.log.threshold=DEBUG
    #zookeeper.tracelog.dir=.
    #zookeeper.tracelog.file=zookeeper_trace.log
    
    #
    # ZooKeeper Logging Configuration
    #
    
    # Format is "<default threshold> (, <appender>)+
    
    # DEFAULT: console appender only
    log4j.rootLogger=${:zookeeper.root.logger}
    
    # Example with rolling log file
    #log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE
    
    # Example with rolling log file and tracing
    #log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE
    
    #
    # Log INFO level and above messages to the console
    #
    log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
    log4j.appender.CONSOLE.Threshold=${:zookeeper.console.threshold}
    log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
    log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n
    
    #
    # Add ROLLINGFILE to rootLogger to get log file output
    #    Log DEBUG level and above messages to a log file
    log4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender
    log4j.appender.ROLLINGFILE.Threshold=${:zookeeper.log.threshold}
    log4j.appender.ROLLINGFILE.File=${:zookeeper.log.dir}/${:zookeeper.log.file}
    
    # Max log file size of 10MB
    log4j.appender.ROLLINGFILE.MaxFileSize=10MB
    # uncomment the next line to limit number of backup files
    #log4j.appender.ROLLINGFILE.MaxBackupIndex=10
    
    log4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout
    log4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n
    
    
    #
    # Add TRACEFILE to rootLogger to get log file output
    #    Log DEBUG level and above messages to a log file
    log4j.appender.TRACEFILE=org.apache.log4j.FileAppender
    log4j.appender.TRACEFILE.Threshold=TRACE
    log4j.appender.TRACEFILE.File=${:zookeeper.tracelog.dir}/${:zookeeper.tracelog.file}
    
    log4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout
    ### Notice we are including log4j's NDC here (%x)
    log4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L][%x] - %m%n
