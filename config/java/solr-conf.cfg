####################################################################
# buildout config to set up solr instance, a multicore instance.
#
# * Generate the solr ase folder.
# * set up the configuration files.
#
####################################################################

# solr instance's context.xml
# it will be symlink to CATALINA_BASE/conf/Catalina/localhost
[solr-context]
recipe = collective.recipe.template
output = ${solr-conf:solr_home}/context.xml
docBase = ${solr-build:location}/dist/solr-${src-versions:solr}.war
inline = 
    <?xml version="1.0" encoding="utf-8"?>
    <Context docBase="${:docBase}" 
        debug="0" crossContext="true">
      <Environment name="solr/home" type="java.lang.String" 
          value="${solr-conf:solr_home}" override="true"/>
    </Context>

# solr.xml file in the solr/home folder.
# We will define all cores here.
[solr-conf]
recipe = collective.recipe.template
solr_home = ${settings:etc-directory}/solr
output = ${:solr_home}/solr.xml
input = cfgrepo/template/tomcat/solr-dev.xml.in
# solr cores defination.
cores = 
    <core default="true" instanceDir="${buildout:directory}/var/solrcores/db" name="db"/>

###################
# wire the solr instance to CATALINA instance.
# it bascially executed a symlink of the solr context.xml to 
# catalina localhost folder. 
# we give name search.xml so the search URL will have pattern like:
#  http://url.to.solr/search
###################
[solr-install]
recipe = plone.recipe.command
localhost-folder = ${tomcat-conf:catalina_base}/conf/Catalina/localhost
# this will decide the URL
search-path = search
command = 
    mkdir -p ${:localhost-folder}
    ln -sv ${solr-context:output} ${:localhost-folder}/${:search-path}.xml 
update-command = ${:command}

# the basic configruation for a basic solr core instance
[solr-core-base]
recipe = collective.recipe.template
instance-dir = ${settings:etc-directory}/solrcores/base
output = ${:instance-dir}/solrconfig.xml
input = cfgrepo/template/tomcat/solrconfig-base.xml.in
