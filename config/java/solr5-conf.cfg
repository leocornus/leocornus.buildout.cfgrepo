####################################################################
#
# buildout parts to configure Solr and Solr Cloud
#
# NOTE: Solr Cloud depens on zookeeper build and config.
#
####################################################################

[ports]
####
# the STOP.PORT will be 7983
# the RMI.PORT will be 18983
solr5-jetty-port = 8983

[users]
solr5 = ubuntu

########
#
# configuration for Solr standalone server.
#
[solr5-conf]
solr5-bin = ${solr5-build:location}/bin/solr
# the -d option.
# default is 
solr5-server = ${solr5-build:location}/server
# the -s option.
# will solr.xml will located.
solr5-solr-home = ${buildout:directory}/var/solr5
# set the logs directory.
# this will be used for environment var: SOLR_LOGS_DIR
# the logging config file (log4j2.xml) will be defined by
# environment var: LOG4J_PROPS it is actually from Log4j.
# default config file will be server/resources/log4j2.xml
solr5-logs-dir = ${:solr5-solr-home}/logs
# the embed jetty port.
solr5-jetty-port = ${ports:solr5-jetty-port}
# set the heap size
solr5-heap-size = 4g
# the solr5 command options.
# need using foreground option for supervisor to manage.
solr5-options = -f -m ${:solr5-heap-size} -d ${:solr5-server} -s ${:solr5-solr-home} -p ${:solr5-jetty-port}
# set up the supervisor program.
supervisor-priority = 200
# add the jetty port number to the supervisor program name
supervisor-program-name = solr5-${:solr5-jetty-port}
supervisor-program = 
    [program:${:supervisor-program-name}]
    command = ${:solr5-bin} ${:solr5-options}
    process_name = ${:supervisor-program-name}
    directory = ${solr5-build:location}
    priority = ${:supervisor-priority}
    redirect_stderr = false
# using SOLR_JAVA_HOME to set the JDK location.
# it is used in the solr shell script.
    environment = SOLR_JAVA_HOME=${java-build:location},SOLR_LOGS_DIR=${:solr5-logs-dir}
    user = ${users:solr5}

########
# the SolrCloud standalone server.
# as explained in SolrCloud example guide, we could create a SolrCloud 
# environment on one VM server.
# It will have one embeded zookeeper server and multiple Solr nodes.
#
# this is a good option to learn SolrCloud
#
[solrcloud-standalone-conf]
# we will main based on the part solr5-conf
<= solr5-conf
# set up the solr node folder, which will have solr.xml, zoo.cfg and 
# data folder for shards
# we could give meaningful name instead of node1.
solr5-node-home = ${:solr5-solr-home}/node1
# the logs besides the data folder.
solr5-logs-dir = ${:solr5-node-home}/logs
# the solrcloud command options.
solr5-options = -f -c -m ${:solr5-heap-size} -d ${:solr5-server} -s ${:solr5-node-home} -p ${:solr5-jetty-port}
# update the supervisor program name to reflect the node.
supervisor-program-name = solr-node1
#### NOTE:
# In the standalone SolrCloud, Zookeeper will be managed as a embeded service,
# Zookeeper port will be solr5-jetty-port + 1000.
# we don't need separate supervisor program fot zookeeper.

#######
# the SolrCloud node
# this will be Solr Node for a SolrCloud environment.
# we will assume the zookeeper server and ensembles are all ready.
#
[solrcloud-node-conf]
# extends from solr5-conf
<= solr5-conf
# set home folder for solr node: solr.xml and data folders.
solr5-node-home = ${:solr5-solr-home}/node2
# the logs besides the data folder.
solr5-logs-dir = ${:solr5-node-home}/logs
# set the zookeeper hosts, could be multiple hosts.
# zookeeper default port is 2181.
zk-host = zookeeper-1:2181,zookeeper-2:2181
# the solrcloud command options.
solr5-options = -f -c -m ${:solr5-heap-size} -d ${:solr5-server} -s ${:solr5-node-home} -p ${:solr5-jetty-port} -z ${:zk-host}
# update the supervisor program name to reflect the node.
supervisor-program-name = solr-node2
