#
# The template to generate a general and basic Nginx conf file.
# It will be loaded by the recipe collective.recipe.template.
# All the buildout properties in this template should be 
# set in the same part where the template is loaded.
#

user ${:run-user};
worker_processes ${:worker_processes};
pid ${:pid};
# we suppose use Supervisord to manage ...
daemon off;

events {
    worker_connections 1024;
    #use epoll;
}

http {
    include ${:nginx-build-location}/conf/mime.types;
    default_type application/octet-stream;
    sendfile on;

    # turn on or off server tokens.
    # this only turn off the verion infor of Server header.
    # full control of header could use the headers more module
    # https://github.com/openresty/headers-more-nginx-module
    server_tokens on;

    # the log format for Nginx behind Varnish server.
    # check the Nginx documentation for more details.
    log_format varnish_log '$http_x_forwarded_for - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent"';

    # turn on gzip
    gzip on;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_vary on;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_buffers 16 8k;
    # disable gzip for IE 6.
    gzip_disable .MSIE [1-6].(?!.*SV1).;

    # more setting for server.
    # client_header_timeout	10m;
    # client_body_timeout	10m;
    # send_timeout		10m;
    # 
    # connection_pool_size		256;
    # client_header_buffer_size	1k;
    # large_client_header_buffers	4 2k;
    # request_pool_size		4k;
    # 
    # output_buffers	1 32k;
    # postpone_output	1460;

    # upload progress module
    #upload_progress uploadprogress 2m;

    # upstream could be:
    # - fastcgi like phpfpm, Python
    # - J2EE Web Container 
    # - Application server like Zope/Plone
    ${:upstreams}

    ${:servers}

    ${:includes}
}
